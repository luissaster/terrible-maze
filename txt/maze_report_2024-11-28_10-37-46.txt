Algorithm Used: Breadth-First Search
Start Position: (6, 0)
Goal Position: (10, 11)

Steps Taken: 42

Complete Path (Explored):
(6, 0), (6, 1), (5, 1), (5, 2), (4, 2), (5, 3), (4, 3), (6, 3), (3, 3), (4, 4), (6, 4), (3, 4), (4, 5), (6, 5), (7, 4), (2, 4), (4, 6), (5, 5), (6, 6), (7, 5), (3, 6), (4, 7), (6, 7), (7, 6), (8, 5), (2, 6), (3, 7), (4, 8), (5, 7), (5, 8), (5, 9), (6, 9), (6, 10), (7, 9), (6, 11), (8, 9), (9, 9), (10, 9), (10, 8), (10, 10), (10, 7), (11, 8), (10, 11)

Final Path (Optimal):
(6, 0), (6, 1), (5, 1), (5, 2), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8), (5, 8), (5, 9), (6, 9), (7, 9), (8, 9), (9, 9), (10, 9), (10, 10), (10, 11)

Maze Layout:
[
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0],
    [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
    [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0],
    [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1],
    [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0],
    [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0],
    [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0],
]
